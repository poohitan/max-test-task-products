{"version":3,"sources":["features/products/productsSlice.js","features/products/components/Product.js","features/products/pages/index.js","helpers/read-as-base64.js","features/products/components/ProductForm.js","features/products/pages/edit.js","features/comments/commentsSlice.js","features/comments/components/CommentForm.js","features/comments/components/Comment.js","features/products/pages/view.js","App.js","app/store.js","index.js"],"names":["productsSlice","createSlice","name","initialState","reducers","create","state","action","push","payload","update","indexOfProductToUpdate","findIndex","product","id","splice","remove","indexOfProductToRemove","actions","Product","description","image","dispatch","useDispatch","comments","useSelector","filter","comment","productId","Card","direction","background","className","CardHeader","pad","to","Heading","level","margin","CardBody","fill","gap","Box","width","Image","fit","src","CardFooter","horizontal","Paragraph","size","pluralize","length","Button","icon","Edit","color","hoverIndicator","title","Trash","onClick","defaultProps","IndexPage","productsList","products","Grid","columns","count","map","readAsBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","ProductForm","useState","formValue","setFormValue","history","useHistory","submit","a","files","imageFile","updatedAt","Date","toISOString","uuidv4","createdAt","Form","value","onChange","nextValue","onSubmit","FormField","label","validate","regexp","message","TextInput","TextArea","FileInput","multiple","accept","type","primary","EditPage","useParams","find","item","alignSelf","heading","commentsSlice","indexOfCommentToRemove","CommentForm","text","Comment","toLocaleString","ViewPage","reverse","commentsHeading","align","left","bottom","border","App","Nav","Anchor","List","Add","path","exact","persistedState","localStorage","getItem","JSON","parse","store","configureStore","reducer","productsReducer","commentsReducer","preloadedState","subscribe","setItem","stringify","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c611364.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const productsSlice = createSlice({\n  name: 'products',\n  initialState: [],\n  reducers: {\n    create: (state, action) => {\n      state.push(action.payload);\n    },\n    update: (state, action) => {\n      const indexOfProductToUpdate = state.findIndex((product) => product.id === action.payload.id);\n\n      state.splice(indexOfProductToUpdate, 1, action.payload);\n    },\n    remove: (state, action) => {\n      const indexOfProductToRemove = state.findIndex((product) => product.id === action.payload);\n\n      state.splice(indexOfProductToRemove, 1);\n    },\n  },\n});\n\nexport const { create, update, remove } = productsSlice.actions;\n\nexport default productsSlice.reducer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport pluralize from 'pluralize';\n\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  Button,\n  Heading,\n  Paragraph,\n  Box,\n  Image,\n} from 'grommet';\nimport {\n  Edit,\n  Trash,\n} from 'grommet-icons';\n\nimport { remove } from '../productsSlice';\n\nimport './Product.css';\n\nconst Product = ({\n  id, name, description, image,\n}) => {\n  const dispatch = useDispatch();\n  const comments = useSelector(\n    (state) => state.comments.filter((comment) => comment.productId === id),\n  );\n\n  return (\n    <Card direction=\"column\" background=\"light-1\" className=\"product\">\n      <CardHeader pad=\"medium\" background=\"light-2\">\n        <Link to={`/products/${id}`}>\n          <Heading level=\"3\" margin=\"none\">\n            {\n              name\n            }\n          </Heading>\n        </Link>\n      </CardHeader>\n      <CardBody direction=\"row\" fill pad=\"medium\" gap=\"medium\" className=\"product-description\">\n        {\n          image\n            ? (\n              <Box width=\"xsmall\">\n                <Image\n                  fit=\"cover\"\n                  src={image}\n                  fill\n                />\n              </Box>\n            )\n            : null\n        }\n        {\n          description\n        }\n      </CardBody>\n      <CardFooter pad={{ horizontal: 'medium' }} background=\"light-2\">\n        <Paragraph size=\"small\">\n          {\n            pluralize('Comment', comments.length, true)\n          }\n        </Paragraph>\n        <Box direction=\"row\">\n          <Link to={`/products/${id}/edit`}>\n            <Button\n              icon={<Edit color=\"plain\" />}\n              hoverIndicator\n              title=\"Edit Product\"\n            />\n          </Link>\n          <Button\n            icon={<Trash color=\"red\" />}\n            hoverIndicator\n            title=\"Remove Product\"\n            onClick={() => dispatch(remove(id))}\n          />\n        </Box>\n      </CardFooter>\n    </Card>\n  );\n};\n\nProduct.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  image: PropTypes.string,\n};\n\nProduct.defaultProps = {\n  description: '',\n  image: '',\n};\n\nexport default Product;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport {\n  Heading,\n  Grid,\n  Paragraph,\n} from 'grommet';\n\nimport Product from '../components/Product';\n\nfunction IndexPage() {\n  const productsList = useSelector((state) => state.products);\n\n  return (\n    <div>\n      <Heading>Product List</Heading>\n\n      <Grid gap=\"medium\" columns={{ count: 'fit', size: 'medium' }}>\n        {\n          productsList.length\n            ? productsList.map((product) => (\n              <Product\n                id={product.id}\n                name={product.name}\n                description={product.description}\n                image={product.image}\n                key={product.id}\n              />\n            ))\n            : <Paragraph margin=\"none\">There are currently no products</Paragraph>\n        }\n      </Grid>\n    </div>\n  );\n}\n\nexport default IndexPage;\n","export default function readAsBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = (error) => reject(error);\n  });\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport {\n  Form,\n  FormField,\n  Box,\n  Button,\n  TextInput,\n  TextArea,\n  FileInput,\n} from 'grommet';\n\nimport { create, update } from '../productsSlice';\n\nimport readAsBase64 from '../../../helpers/read-as-base64';\n\nconst ProductForm = ({ product }) => {\n  const [formValue, setFormValue] = useState(product);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const submit = async ({\n    id, name, description, files = [],\n  }) => {\n    const [imageFile] = files;\n\n    const image = imageFile ? await readAsBase64(imageFile) : product.image;\n\n    if (id) {\n      dispatch(update({\n        id,\n        name,\n        description,\n        image,\n        updatedAt: new Date().toISOString(),\n      }));\n\n      history.push(`/products/${id}`);\n\n      return;\n    }\n\n    dispatch(create({\n      id: uuidv4(),\n      name,\n      description,\n      image,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString(),\n    }));\n\n    history.push('/');\n  };\n\n  return (\n    <Form\n      value={formValue}\n      onChange={(nextValue) => setFormValue(nextValue)}\n      onSubmit={({ value }) => submit(value)}\n    >\n      <Box direction=\"column\" gap=\"small\" width=\"large\">\n        <FormField\n          name=\"name\"\n          label=\"Name\"\n          validate={{\n            regexp: /\\S+/,\n            message: 'Name can\\'t be empty',\n          }}\n        >\n          <TextInput name=\"name\" />\n        </FormField>\n        <FormField\n          name=\"description\"\n          label=\"Description\"\n          validate={{\n            regexp: /\\S+/,\n            message: 'Description can\\'t be empty',\n          }}\n        >\n          <TextArea name=\"description\" />\n        </FormField>\n        <FormField\n          name=\"image\"\n          label=\"Image\"\n        >\n          <FileInput name=\"files\" multiple={false} accept=\"image/*\" />\n        </FormField>\n      </Box>\n      <Box direction=\"row\" gap=\"medium\">\n        <Button type=\"submit\" size=\"large\" primary label=\"Save\" />\n      </Box>\n    </Form>\n  );\n};\n\nProductForm.propTypes = {\n  product: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.string,\n  }),\n};\n\nProductForm.defaultProps = {\n  product: {\n    name: '',\n    description: '',\n  },\n};\n\nexport default ProductForm;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport {\n  Heading,\n  Paragraph,\n} from 'grommet';\n\nimport ProductForm from '../components/ProductForm';\n\nfunction EditPage() {\n  const { id } = useParams();\n  const product = useSelector(\n    (state) => state.products.find((item) => item.id === id),\n  );\n\n  if (id && !product) {\n    return (\n      <Paragraph alignSelf=\"center\" fill margin=\"none\" color=\"status-error\">\n        Product with ID&nbsp;\n        <b>{id}</b>\n        &nbsp;doesn&apos;t exist.\n      </Paragraph>\n    );\n  }\n\n  const heading = product\n    ? (\n      <Heading>\n        Edit&nbsp;\n        <b>\n          &quot;\n          {product.name}\n          &quot;\n        </b>\n      </Heading>\n    )\n    : <Heading>Create Product</Heading>;\n\n  return (\n    <>\n      {heading}\n      <ProductForm product={product} />\n    </>\n  );\n}\n\nexport default EditPage;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const commentsSlice = createSlice({\n  name: 'comments',\n  initialState: [],\n  reducers: {\n    create: (state, action) => {\n      state.push(action.payload);\n    },\n    remove: (state, action) => {\n      const indexOfCommentToRemove = state.findIndex((comment) => comment.id === action.payload);\n\n      state.splice(indexOfCommentToRemove, 1);\n    },\n  },\n});\n\nexport const { create, remove } = commentsSlice.actions;\n\nexport default commentsSlice.reducer;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport {\n  Form,\n  FormField,\n  TextArea,\n  Box,\n  Button,\n} from 'grommet';\n\nimport { create } from '../commentsSlice';\n\nconst CommentForm = ({ productId }) => {\n  const [formValue, setFormValue] = useState();\n  const dispatch = useDispatch();\n\n  const submit = (comment) => {\n    dispatch(create({\n      id: uuidv4(),\n      productId,\n      createdAt: new Date().toISOString(),\n      ...comment,\n    }));\n\n    setFormValue({\n      text: '',\n    });\n  };\n\n  return (\n    <Form\n      value={formValue}\n      onChange={(nextValue) => setFormValue(nextValue)}\n      onSubmit={({ value }) => submit(value)}\n    >\n      <Box direction=\"column\" gap=\"small\">\n        <FormField\n          name=\"text\"\n          validate={{\n            regexp: /\\S+/,\n            message: 'Comment text can\\'t be empty',\n          }}\n        >\n          <TextArea name=\"text\" />\n        </FormField>\n      </Box>\n      <Box direction=\"row\" gap=\"medium\">\n        <Button type=\"submit\" primary label=\"Add Comment\" />\n      </Box>\n    </Form>\n  );\n};\n\nCommentForm.propTypes = {\n  productId: PropTypes.string.isRequired,\n};\n\nexport default CommentForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  Button,\n  Paragraph,\n} from 'grommet';\nimport {\n  Trash,\n} from 'grommet-icons';\n\nimport { remove } from '../commentsSlice';\n\nconst Comment = ({ id, text, createdAt }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Card direction=\"column\" background=\"light-1\">\n      <CardBody fill pad=\"small\">\n        <Paragraph margin=\"none\">{text}</Paragraph>\n      </CardBody>\n      <CardFooter pad={{ horizontal: 'small' }} background=\"light-2\">\n        <Paragraph size=\"small\" margin=\"none\">{new Date(createdAt).toLocaleString()}</Paragraph>\n        <Button\n          icon={<Trash color=\"red\" size=\"small\" />}\n          hoverIndicator\n          title=\"Remove Comment\"\n          onClick={() => dispatch(remove(id))}\n        />\n      </CardFooter>\n    </Card>\n  );\n};\n\nComment.propTypes = {\n  id: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  createdAt: PropTypes.string.isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams, Link } from 'react-router-dom';\nimport pluralize from 'pluralize';\n\nimport {\n  Heading,\n  Paragraph,\n  Box,\n  Button,\n  Image,\n} from 'grommet';\n\nimport CommentForm from '../../comments/components/CommentForm';\nimport Comment from '../../comments/components/Comment';\n\nimport './view.css';\n\nfunction ViewPage() {\n  const { id } = useParams();\n  const product = useSelector(\n    (state) => state.products.find((item) => item.id === id),\n  );\n  const comments = useSelector(\n    (state) => state.comments.filter((item) => item.productId === id),\n  ).reverse();\n\n  if (!product) {\n    return (\n      <Paragraph alignSelf=\"center\" fill margin=\"none\" color=\"status-error\">\n        Product with ID&nbsp;\n        <b>{id}</b>\n        &nbsp;doesn&apos;t exist.\n      </Paragraph>\n    );\n  }\n\n  const commentsHeading = comments.length\n    ? pluralize('Comment', comments.length, true)\n    : 'No comments yet';\n\n  return (\n    <>\n      <Box direction=\"row\" align=\"center\">\n        <Heading margin=\"bottom\">\n          {\n            product.name\n          }\n        </Heading>\n        <Link to={`/products/${id}/edit`}>\n          <Button type=\"submit\" label=\"Edit\" margin={{ left: 'large' }} />\n        </Link>\n      </Box>\n      <Box direction=\"row\" margin={{ bottom: 'large' }} gap=\"medium\">\n        {\n          product.image\n            ? (\n              <Box width=\"medium\">\n                <Image\n                  fit=\"contain\"\n                  src={product.image}\n                  fill\n                />\n              </Box>\n            )\n            : null\n        }\n        <Paragraph width=\"70%\" margin=\"none\" className=\"product-description\">\n          {\n            product.description\n          }\n        </Paragraph>\n      </Box>\n      <Box border={{ color: 'brand', size: 'medium' }} pad=\"medium\" gap=\"medium\" width=\"large\">\n        <Heading level=\"4\" margin=\"none\">\n          {\n            commentsHeading\n          }\n        </Heading>\n        <CommentForm productId={id} />\n        {\n          comments.map((comment) => (\n            <Comment\n              key={comment.id}\n              id={comment.id}\n              text={comment.text}\n              createdAt={comment.createdAt}\n            />\n          ))\n        }\n      </Box>\n\n    </>\n  );\n}\n\nexport default ViewPage;\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from 'react-router-dom';\n\nimport {\n  Nav,\n  Anchor,\n  Box,\n} from 'grommet';\nimport {\n  List,\n  Add,\n} from 'grommet-icons';\n\nimport ListProductsPage from './features/products/pages/index';\nimport EditProductPage from './features/products/pages/edit';\nimport ViewProductPage from './features/products/pages/view';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Nav direction=\"row\" background=\"brand\" pad=\"medium\">\n          <Link to=\"/\">\n            <Anchor icon={<List />} label=\"Product List\" />\n          </Link>\n          <Link to=\"/products/new\">\n            <Anchor icon={<Add />} label=\"Add Product\" />\n          </Link>\n        </Nav>\n\n        <Box direction=\"column\" pad=\"medium\">\n          <Switch>\n            <Route path=\"/\" exact>\n              <ListProductsPage />\n            </Route>\n            <Route path=\"/products/new\" exact>\n              <EditProductPage />\n            </Route>\n            <Route path=\"/products/:id/edit\" exact>\n              <EditProductPage />\n            </Route>\n            <Route path=\"/products/:id\" exact>\n              <ViewProductPage />\n            </Route>\n          </Switch>\n        </Box>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport productsReducer from '../features/products/productsSlice';\nimport commentsReducer from '../features/comments/commentsSlice';\n\nconst persistedState = localStorage.getItem('state')\n  ? JSON.parse(localStorage.getItem('state'))\n  : {};\n\nconst store = configureStore({\n  reducer: {\n    products: productsReducer,\n    comments: commentsReducer,\n  },\n  preloadedState: persistedState,\n});\n\nstore.subscribe(() => {\n  localStorage.setItem('state', JSON.stringify(store.getState()));\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './app/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}